[build-system]
requires = ["setuptools>=45", "wheel", "setuptools-scm[toml]>=6.2"]
build-backend = "setuptools.build_meta"

[project]
name = "mayini-framework"
version = "0.1.1"
description = "A comprehensive deep learning framework with Tensor operations, ANN, CNN, and RNN implementations"
readme = "README.md"
license = {file = "LICENSE"}
authors = [
    {name = "Adari Abhishek", email = "abhishekadari85@gmail.com"}
]
maintainers = [
    {name = "Palivela Giridhar", email = "nanipalivela830@gmail.com"}
]
keywords = [
    "deep-learning", 
    "machine-learning", 
    "neural-networks", 
    "tensor", 
    "pytorch-like", 
    "framework",
    "artificial-intelligence"
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.7",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
requires-python = ">=3.7"
dependencies = [
    "numpy>=1.21.0",
    "matplotlib>=3.5.0",
    "seaborn>=0.11.0",
    "tqdm>=4.64.0",
    "scikit-learn>=1.1.0"
]

[project.optional-dependencies]
dev = [
    "pytest>=6.0",
    "pytest-cov>=2.0",
    "black>=21.0",
    "flake8>=3.8",
    "mypy>=0.910",
    "isort>=5.9",
    "sphinx>=4.0",
    "sphinx-rtd-theme>=1.0",
]
docs = [
    "sphinx>=4.0",
    "sphinx-rtd-theme>=1.0",
    "myst-parser>=0.17",
    "sphinxcontrib-napoleon>=0.7",
]
examples = [
    "jupyter>=1.0",
    "notebook>=6.4",
    "ipykernel>=6.0",
]
test = [
    "pytest>=6.0",
    "pytest-cov>=2.0",
    "pytest-xdist>=2.0",
]
all = [
    "mayini-framework[dev,docs,examples,test]",
]

[project.urls]
Homepage = "https://github.com/907-bot-collab/mayini"
Documentation = "https://mayini-framework.readthedocs.io/"
Repository = "https://github.com/907-bot-collab/mayini"
"Bug Tracker" = "https://github.com/907-bot-collab/mayini/issues"
Changelog = "https://github.com/907-bot-collab/mayini/blob/main/CHANGELOG.md"

[project.scripts]
# Add command-line scripts here if needed
# mayini = "mayini.cli:main"

[tool.setuptools]
package-dir = {"" = "src"}
include-package-data = true
zip-safe = false

[tool.setuptools.packages.find]
where = ["src"]
include = ["mayini*"]
exclude = ["tests*", "docs*", "examples*"]

[tool.setuptools.package-data]
mayini = ["py.typed", "*.json", "*.yaml", "*.yml"]

[tool.black]
line-length = 88
target-version = ['py37', 'py38', 'py39', 'py310', 'py311', 'py312']
include = '\.pyi?$'
extend-exclude = '''
/(
    \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
line_length = 88
skip_gitignore = true

[tool.mypy]
python_version = "3.7"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false
disallow_incomplete_defs = false
check_untyped_defs = false
disallow_untyped_decorators = false
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
follow_imports = "normal"
ignore_missing_imports = true
pretty = true
show_column_numbers = true
show_error_codes = true
show_error_context = true

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q --strict-markers --cov=mayini --cov-report=term-missing"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

[tool.coverage.run]
source = ["src/mayini"]
omit = [
    "*/tests/*",
    "*/test_*.py",
    "*/__init__.py",
    "*/setup.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "def __str__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
    "if typing.TYPE_CHECKING:",
    "@abstractmethod",
    "@abc.abstractmethod",
    "except ImportError:",
    "pass",
]
precision = 2
show_missing = true
skip_covered = false

[tool.coverage.html]
directory = "htmlcov"

[tool.flake8]
max-line-length = 88
extend-ignore = ["E203", "W503", "E501"]
exclude = [
    ".git",
    "__pycache__",
    "docs/source/conf.py",
    "old",
    "build",
    "dist",
    ".eggs",
    "*.egg",
]
per-file-ignores = [
    "__init__.py:F401",
]
