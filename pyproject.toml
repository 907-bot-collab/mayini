# Create corrected setup.py and pyproject.toml files

corrected_setup_py = '''#!/usr/bin/env python3
"""
MAYINI Deep Learning Framework
A comprehensive deep learning framework with Tensor operations, ANN, CNN, and RNN implementations.
"""

from setuptools import setup, find_packages
import os

# Read the README file
def read_readme():
    """Read README.md file for long description."""
    here = os.path.abspath(os.path.dirname(__file__))
    readme_path = os.path.join(here, 'README.md')
    if os.path.exists(readme_path):
        with open(readme_path, 'r', encoding='utf-8') as f:
            return f.read()
    return ""

# Read requirements
def read_requirements():
    """Read requirements.txt file."""
    here = os.path.abspath(os.path.dirname(__file__))
    requirements_path = os.path.join(here, 'requirements.txt')
    if os.path.exists(requirements_path):
        with open(requirements_path, 'r', encoding='utf-8') as f:
            return [line.strip() for line in f if line.strip() and not line.startswith('#')]
    return [
        'numpy>=1.21.0',
        'matplotlib>=3.5.0',
        'seaborn>=0.11.0',
        'tqdm>=4.64.0',
        'scikit-learn>=1.1.0'
    ]

setup(
    name="mayini-framework",
    version="0.1.1",  # Fixed version to avoid setuptools_scm issues
    author="Abhishek Adari",
    author_email="abhishekadari85@gmail.com",
    maintainer="Palivela Giridhar",
    maintainer_email="nanipalivela830@gmail.com",
    description="A comprehensive deep learning framework with Tensor operations, ANN, CNN, and RNN implementations",
    long_description=read_readme(),
    long_description_content_type="text/markdown",
    url="https://github.com/907-bot-collab/mayini",
    packages=find_packages(where="src"),
    package_dir={"": "src"},
    classifiers=[
        "Development Status :: 4 - Beta",
        "Intended Audience :: Developers",
        "Intended Audience :: Science/Research",
        "License :: OSI Approved :: MIT License",
        "Operating System :: OS Independent",
        "Programming Language :: Python :: 3",
        "Programming Language :: Python :: 3.7",
        "Programming Language :: Python :: 3.8",
        "Programming Language :: Python :: 3.9",
        "Programming Language :: Python :: 3.10",
        "Programming Language :: Python :: 3.11",
        "Topic :: Scientific/Engineering :: Artificial Intelligence",
        "Topic :: Software Development :: Libraries :: Python Modules",
    ],
    python_requires=">=3.7",
    install_requires=read_requirements(),
    extras_require={
        "dev": [
            "pytest>=6.0",
            "pytest-cov>=2.0",
            "black>=21.0",
            "flake8>=3.8",
            "sphinx>=4.0",
            "sphinx-rtd-theme>=1.0",
        ],
        "docs": [
            "sphinx>=4.0",
            "sphinx-rtd-theme>=1.0",
            "myst-parser>=0.17",
        ],
        "examples": [
            "jupyter>=1.0",
            "notebook>=6.4",
        ],
    },
    project_urls={
        "Bug Reports": "https://github.com/907-bot-collab/mayini/issues",
        "Source": "https://github.com/907-bot-collab/mayini",
        "Documentation": "https://mayini-framework.readthedocs.io/",
    },
    keywords="deep-learning machine-learning neural-networks tensor pytorch-like framework",
    include_package_data=True,
    zip_safe=False,
)
'''

corrected_pyproject_toml = '''[build-system]
requires = ["setuptools>=45", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "mayini-framework"
version = "0.1.1"  # Fixed version instead of dynamic
description = "A comprehensive deep learning framework with Tensor operations, ANN, CNN, and RNN implementations"
readme = "README.md"
license = {file = "LICENSE"}
authors = [
    {name = "Adari Abhishek", email = "abhishekadari85@gmail.com"}
]
maintainers = [
    {name = "Palivela Giridhar", email = "nanipalivela830@gmail.com"}
]
keywords = ["deep-learning", "machine-learning", "neural-networks", "tensor", "pytorch-like", "framework"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.7",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
requires-python = ">=3.7"
dependencies = [
    "numpy>=1.21.0",
    "matplotlib>=3.5.0",
    "seaborn>=0.11.0",
    "tqdm>=4.64.0",
    "scikit-learn>=1.1.0"
]

[project.optional-dependencies]
dev = [
    "pytest>=6.0",
    "pytest-cov>=2.0",
    "black>=21.0",
    "flake8>=3.8",
    "sphinx>=4.0",
    "sphinx-rtd-theme>=1.0",
]
docs = [
    "sphinx>=4.0",
    "sphinx-rtd-theme>=1.0",
    "myst-parser>=0.17",
]
examples = [
    "jupyter>=1.0",
    "notebook>=6.4",
]

[project.urls]
Homepage = "https://github.com/907-bot-collab/mayini"
Documentation = "https://mayini-framework.readthedocs.io/"
Repository = "https://github.com/907-bot-collab/mayini"
"Bug Tracker" = "https://github.com/907-bot-collab/mayini/issues"
Changelog = "https://github.com/907-bot-collab/mayini/blob/main/CHANGELOG.md"

[tool.setuptools]
package-dir = {"" = "src"}

[tool.setuptools.packages.find]
where = ["src"]

[tool.black]
line-length = 88
target-version = ['py37', 'py38', 'py39', 'py310', 'py311']
include = '\\.pyi?$'

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q --strict-markers"
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]

[tool.coverage.run]
source = ["src/mayini"]
omit = [
    "tests/*"
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
]
'''

